[{"/home/galina/code/loft-taxi/src/index.js":"1","/home/galina/code/loft-taxi/src/reportWebVitals.js":"2","/home/galina/code/loft-taxi/src/components/App/App.js":"3","/home/galina/code/loft-taxi/src/components/header/index.jsx":"4","/home/galina/code/loft-taxi/src/components/map/index.jsx":"5","/home/galina/code/loft-taxi/src/components/loginPage/index.jsx":"6","/home/galina/code/loft-taxi/src/components/loginForm/index.jsx":"7","/home/galina/code/loft-taxi/src/components/registrationForm/index.jsx":"8","/home/galina/code/loft-taxi/src/components/profile/index.jsx":"9","/home/galina/code/loft-taxi/src/redux/store.js":"10","/home/galina/code/loft-taxi/src/components/privetComponent/index.jsx":"11","/home/galina/code/loft-taxi/src/components/main/index.jsx":"12","/home/galina/code/loft-taxi/src/redux/auth/index.js":"13","/home/galina/code/loft-taxi/src/redux/auth/selectors.js":"14","/home/galina/code/loft-taxi/src/redux/auth/reducer.js":"15","/home/galina/code/loft-taxi/src/redux/auth/actions.js":"16","/home/galina/code/loft-taxi/src/saga/index.js":"17","/home/galina/code/loft-taxi/src/saga/auth/index.js":"18","/home/galina/code/loft-taxi/src/saga/auth/sagas.js":"19","/home/galina/code/loft-taxi/src/saga/auth/actions.js":"20","/home/galina/code/loft-taxi/src/components/customSelect/index.js":"21","/home/galina/code/loft-taxi/src/components/carSelect/index.js":"22","/home/galina/code/loft-taxi/src/components/customInput/index.js":"23","/home/galina/code/loft-taxi/src/saga/route/index.js":"24","/home/galina/code/loft-taxi/src/saga/route/sagas.js":"25","/home/galina/code/loft-taxi/src/saga/route/actions.js":"26","/home/galina/code/loft-taxi/src/redux/route/index.js":"27","/home/galina/code/loft-taxi/src/redux/route/actions.js":"28","/home/galina/code/loft-taxi/src/redux/route/reducer.js":"29","/home/galina/code/loft-taxi/src/redux/route/selectors.js":"30","/home/galina/code/loft-taxi/src/saga/payment/index.js":"31","/home/galina/code/loft-taxi/src/saga/payment/sagas.js":"32","/home/galina/code/loft-taxi/src/saga/payment/actions.js":"33","/home/galina/code/loft-taxi/src/redux/payment/index.js":"34","/home/galina/code/loft-taxi/src/redux/payment/reducer.js":"35","/home/galina/code/loft-taxi/src/redux/payment/actions.js":"36","/home/galina/code/loft-taxi/src/redux/payment/selectors.js":"37","/home/galina/code/loft-taxi/src/components/routePage/index.jsx":"38","/home/galina/code/loft-taxi/src/components/routeSelect/index.jsx":"39","/home/galina/code/loft-taxi/src/components/successRouteForm/index.jsx":"40","/home/galina/code/loft-taxi/src/components/errorRouteForm/index.jsx":"41","/home/galina/code/loft-taxi/src/components/successPaymentForm/index.jsx":"42"},{"size":918,"mtime":1614532877560,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":1610972953063,"results":"45","hashOfConfig":"44"},{"size":970,"mtime":1615273758870,"results":"46","hashOfConfig":"44"},{"size":1157,"mtime":1614885022630,"results":"47","hashOfConfig":"44"},{"size":4715,"mtime":1615025298070,"results":"48","hashOfConfig":"44"},{"size":1669,"mtime":1614887060140,"results":"49","hashOfConfig":"44"},{"size":2709,"mtime":1615273484430,"results":"50","hashOfConfig":"44"},{"size":3326,"mtime":1615140503030,"results":"51","hashOfConfig":"44"},{"size":6240,"mtime":1615024853680,"results":"52","hashOfConfig":"44"},{"size":558,"mtime":1614711456180,"results":"53","hashOfConfig":"44"},{"size":349,"mtime":1614783617020,"results":"54","hashOfConfig":"44"},{"size":1072,"mtime":1614887227610,"results":"55","hashOfConfig":"44"},{"size":93,"mtime":1614428101960,"results":"56","hashOfConfig":"44"},{"size":177,"mtime":1614508621960,"results":"57","hashOfConfig":"44"},{"size":613,"mtime":1614516912070,"results":"58","hashOfConfig":"44"},{"size":411,"mtime":1614517642930,"results":"59","hashOfConfig":"44"},{"size":310,"mtime":1614710987250,"results":"60","hashOfConfig":"44"},{"size":62,"mtime":1614431696250,"results":"61","hashOfConfig":"44"},{"size":1698,"mtime":1614888490410,"results":"62","hashOfConfig":"44"},{"size":382,"mtime":1614518126790,"results":"63","hashOfConfig":"44"},{"size":804,"mtime":1615018201330,"results":"64","hashOfConfig":"44"},{"size":1860,"mtime":1615140378830,"results":"65","hashOfConfig":"44"},{"size":386,"mtime":1614609897310,"results":"66","hashOfConfig":"44"},{"size":62,"mtime":1614681734860,"results":"67","hashOfConfig":"44"},{"size":1037,"mtime":1614888490360,"results":"68","hashOfConfig":"44"},{"size":271,"mtime":1614702787870,"results":"69","hashOfConfig":"44"},{"size":93,"mtime":1614696606390,"results":"70","hashOfConfig":"44"},{"size":291,"mtime":1614704806530,"results":"71","hashOfConfig":"44"},{"size":596,"mtime":1614788774020,"results":"72","hashOfConfig":"44"},{"size":118,"mtime":1614704985250,"results":"73","hashOfConfig":"44"},{"size":62,"mtime":1614681734860,"results":"74","hashOfConfig":"44"},{"size":1333,"mtime":1614888510250,"results":"75","hashOfConfig":"44"},{"size":255,"mtime":1614710987340,"results":"76","hashOfConfig":"44"},{"size":93,"mtime":1614696606390,"results":"77","hashOfConfig":"44"},{"size":785,"mtime":1614806514730,"results":"78","hashOfConfig":"44"},{"size":324,"mtime":1614801480320,"results":"79","hashOfConfig":"44"},{"size":209,"mtime":1614803066250,"results":"80","hashOfConfig":"44"},{"size":1132,"mtime":1615019538220,"results":"81","hashOfConfig":"44"},{"size":2380,"mtime":1615019059510,"results":"82","hashOfConfig":"44"},{"size":959,"mtime":1614889385920,"results":"83","hashOfConfig":"44"},{"size":849,"mtime":1615140486840,"results":"84","hashOfConfig":"44"},{"size":786,"mtime":1614890980110,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"p9v2s7",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/home/galina/code/loft-taxi/src/index.js",[],["179","180"],"/home/galina/code/loft-taxi/src/reportWebVitals.js",[],"/home/galina/code/loft-taxi/src/components/App/App.js",[],"/home/galina/code/loft-taxi/src/components/header/index.jsx",[],"/home/galina/code/loft-taxi/src/components/map/index.jsx",[],"/home/galina/code/loft-taxi/src/components/loginPage/index.jsx",[],"/home/galina/code/loft-taxi/src/components/loginForm/index.jsx",[],"/home/galina/code/loft-taxi/src/components/registrationForm/index.jsx",[],"/home/galina/code/loft-taxi/src/components/profile/index.jsx",["181","182","183","184","185"],"import React, { useEffect, useMemo } from \"react\";\nimport * as Yup from \"yup\";\nimport s from \"./styles.module.css\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport CustomInput from \"../customInput\";\nimport logo from \"../../assets/logo-card.png\";\nimport forCard from \"../../assets/forCard.png\";\nimport masterCard from \"../../assets/mastercard.svg\";\nimport { useFormik } from \"formik\";\nimport { connect } from \"react-redux\";\nimport {\n  getCardInfo,\n  getSuccessCard,\n  setSuccessCard,\n} from \"../../redux/payment\";\nimport { setPaymentData } from \"../../saga/payment\";\nimport SuccessPayment from \"../successPaymentForm\";\nimport PropTypes from \"prop-types\";\n\nconst cardSchema = Yup.object().shape({\n  name: Yup.string()\n    .uppercase(\" \")\n    .matches(/\\w+ \\w+/, \"Неверный формат\")\n    .required(\" \"),\n  number: Yup.string().trim().length(19, \" \").required(\" \"),\n  date: Yup.string().trim().length(5, \" \").required(\" \"),\n  cvv: Yup.string().trim().length(3, \" \").required(\" \"),\n});\n\nconst Profile = ({\n  cardInfo: { cardNumber, expiryDate, cardName, cvc },\n  setPaymentData,\n  isSuccessCard,\n  setSuccessCard,\n}) => {\n  const formik = useFormik({\n    initialValues: {\n      name: cardName,\n      number: cardNumber,\n      date: expiryDate,\n      cvv: cvc,\n    },\n    validationSchema: cardSchema,\n    onSubmit: ({ number, date, name, cvv }) => {\n      setPaymentData({\n        cardName: name,\n        cardNumber: number,\n        expiryDate: date,\n        cvc: cvv,\n      });\n    },\n  });\n\n  useEffect(() => {\n    return () => {\n      setSuccessCard(false);\n    };\n  }, []);\n\n  useEffect(() => {\n    formik.setValues({\n      name: cardName,\n      number: cardNumber,\n      date: expiryDate,\n      cvv: cvc,\n    });\n  }, [cardName, cardNumber, expiryDate, cvc]);\n\n  const formatDate = useMemo(\n    () =>\n      formik.values.date.trim() === \"/\"\n        ? \"00/00\"\n        : formik.values.date.replace(/ /g, \"0\"),\n    [formik.values.date]\n  );\n\n  const formatNumber = useMemo(\n    () =>\n      formik.values.number.trim()\n        ? formik.values.number.trim() +\n          \"0000 0000 0000 0000\".substr(formik.values.number.trim().length)\n        : \"0000 0000 0000 0000\",\n    [formik.values.number]\n  );\n\n  return (\n    <div className={s.profileWrapper}>\n      {isSuccessCard ? (\n        <SuccessPayment />\n      ) : (\n        <form onSubmit={formik.handleSubmit} className={s.profileCard}>\n          <div className={s.titleWrapper}>\n            <h1 className={s.title}>Профиль</h1>\n            <span className={s.desc}>Введите платежные данные</span>\n          </div>\n          <div className={s.cardWrapper}>\n            <div className={s.cardForm}>\n              <TextField\n                label=\"Имя владельца\"\n                id=\"name\"\n                name=\"name\"\n                value={formik.values.name}\n                onChange={(e) => {\n                  e.target.value = e.target.value.toUpperCase();\n                  formik.handleChange(e);\n                }}\n                onBlur={formik.handleBlur}\n                helperText={formik.touched.name ? formik.errors.name : \"\"}\n                error={formik.errors.name && formik.touched.name}\n                fullWidth\n                margin=\"normal\"\n                data-testid=\"password-input\"\n              />\n              <CustomInput\n                label=\"Номер карты\"\n                id=\"number\"\n                name=\"number\"\n                value={formik.values.number}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                helperText={formik.touched.number ? formik.errors.number : \"\"}\n                error={formik.errors.number && formik.touched.number}\n                fullWidth\n                margin=\"normal\"\n                data-testid=\"password-input\"\n                mask=\"9999 9999 9999 9999\"\n              />\n              <div className={s.inputRow}>\n                <CustomInput\n                  label=\"MM/YY\"\n                  id=\"date\"\n                  name=\"date\"\n                  value={formik.values.date}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  helperText={formik.touched.date ? formik.errors.date : \"\"}\n                  error={formik.errors.date && formik.touched.date}\n                  margin=\"normal\"\n                  mask=\"99/99\"\n                />\n                <CustomInput\n                  label=\"CVV\"\n                  id=\"cvv\"\n                  name=\"cvv\"\n                  value={formik.values.cvv}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  helperText={formik.touched.cvv ? formik.errors.cvv : \"\"}\n                  error={formik.errors.cvv && formik.touched.cvv}\n                  margin=\"normal\"\n                  mask=\"999\"\n                />\n              </div>\n            </div>\n            <div className={s.cardInfo}>\n              <div className={s.row}>\n                <img src={logo} className={s.icon} />\n                <div className={s.date}>{formatDate}</div>\n              </div>\n              <div className={s.number}>{formatNumber}</div>\n              <div className={s.row}>\n                <img src={forCard} className={s.icon} />\n                <img src={masterCard} className={s.icon} />\n              </div>\n            </div>\n          </div>\n          <div className={s.buttonRow}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n              data-testid=\"login-button\"\n            >\n              Сохранить\n            </Button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  cardInfo: PropTypes.object,\n  setPaymentData: PropTypes.func,\n  isSuccessCard: PropTypes.bool,\n  setSuccessCard: PropTypes.func,\n};\n\nexport default connect(\n  (state) => ({\n    cardInfo: getCardInfo(state),\n    isSuccessCard: getSuccessCard(state),\n  }),\n  (dispatch) => ({\n    setPaymentData: (cardInfo) => dispatch(setPaymentData(cardInfo)),\n    setSuccessCard: (bool) => dispatch(setSuccessCard(bool)),\n  })\n)(Profile);\n","/home/galina/code/loft-taxi/src/redux/store.js",[],"/home/galina/code/loft-taxi/src/components/privetComponent/index.jsx",[],"/home/galina/code/loft-taxi/src/components/main/index.jsx",[],"/home/galina/code/loft-taxi/src/redux/auth/index.js",[],"/home/galina/code/loft-taxi/src/redux/auth/selectors.js",[],"/home/galina/code/loft-taxi/src/redux/auth/reducer.js",["186"],"import { actions } from \"./actions\";\n\nconst initialState = {\n  isLoggedIn: false,\n  loading: false,\n  token: \"\",\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case actions.LOG_IN_EVENT: {\n      return {\n        ...state,\n        isLoggedIn: true,\n        token: action.payload,\n      };\n    }\n    case actions.LOG_OUT_EVENT: {\n      return {\n        ...state,\n        isLoggedIn: false,\n        token: \"\",\n      };\n    }\n    case actions.LOADING: {\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","/home/galina/code/loft-taxi/src/redux/auth/actions.js",[],"/home/galina/code/loft-taxi/src/saga/index.js",[],"/home/galina/code/loft-taxi/src/saga/auth/index.js",[],"/home/galina/code/loft-taxi/src/saga/auth/sagas.js",["187"],"import { put, takeEvery } from \"@redux-saga/core/effects\";\nimport { actions } from \"./actions\";\nimport { toast } from \"react-toastify\";\nimport { authLogIn, setAuthLoading } from \"../../redux/auth\";\nimport axios from \"axios\";\nimport { getPaymentData } from \"../payment\";\n\nfunction* authorizationSaga({ payload: { login, password } }) {\n  yield put(setAuthLoading(true));\n\n  try {\n    const { data } = yield axios.post(\"https://loft-taxi.glitch.me/auth\", {\n      email: login,\n      password: password,\n    });\n\n    if (data.success) {\n      yield put(authLogIn(data.token));\n      yield put(getPaymentData());\n    } else {\n      toast.error(data.error);\n    }\n  } catch (e) {\n    toast.error(e.message);\n    console.error(e);\n  }\n\n  yield put(setAuthLoading(false));\n}\n\nfunction* registrationSaga({ payload: { email, password, name } }) {\n  const firstname = name.split(\" \")[0];\n  const surname = name.split(\" \")[1];\n  yield put(setAuthLoading(true));\n\n  try {\n    //{success: true, token: AUTH_TOKEN}&&{success: false, error: Сообщение об ошибке}\n    const { data } = yield axios.post(\"https://loft-taxi.glitch.me/register\", {\n      email,\n      password,\n      name: firstname,\n      surname,\n    });\n\n    if (data.success) {\n      yield put(authLogIn(data.token));\n      yield put(getPaymentData());\n      toast.success(\"Регистрация прошла успешно\");\n    } else {\n      toast.error(data.error);\n    }\n  } catch (e) {\n    toast.error(e.message);\n    console.error(e);\n  }\n\n  yield put(setAuthLoading(false));\n}\n\nexport default function* () {\n  yield takeEvery(actions.LOGIN, authorizationSaga);\n  yield takeEvery(actions.REGISTRATION, registrationSaga);\n}\n","/home/galina/code/loft-taxi/src/saga/auth/actions.js",[],"/home/galina/code/loft-taxi/src/components/customSelect/index.js",[],"/home/galina/code/loft-taxi/src/components/carSelect/index.js",[],"/home/galina/code/loft-taxi/src/components/customInput/index.js",[],"/home/galina/code/loft-taxi/src/saga/route/index.js",[],"/home/galina/code/loft-taxi/src/saga/route/sagas.js",["188"],"import { put, takeEvery } from \"@redux-saga/core/effects\";\nimport { actions } from \"./actions\";\nimport { setAddressList, setRoute } from \"../../redux/route\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nfunction* addressListSaga() {\n  try {\n    const { data } = yield axios.get(\"https://loft-taxi.glitch.me/addressList\");\n\n    yield put(setAddressList(data.addresses));\n  } catch (e) {}\n}\n\nfunction* getRouteSaga({ payload: { address1, address2 } }) {\n  try {\n    const { data } = yield axios.get(\"https://loft-taxi.glitch.me/route\", {\n      params: {\n        address1,\n        address2,\n      },\n    });\n\n    if (!data.length) {\n      toast.error(\"Маршрут не может быть построен\");\n    }\n    yield put(setRoute(data));\n  } catch (e) {}\n}\n\nexport default function* () {\n  yield takeEvery(actions.ADDRESS_LIST, addressListSaga);\n  yield takeEvery(actions.GET_ROUTE, getRouteSaga);\n}\n","/home/galina/code/loft-taxi/src/saga/route/actions.js",[],"/home/galina/code/loft-taxi/src/redux/route/index.js",[],"/home/galina/code/loft-taxi/src/redux/route/actions.js",[],"/home/galina/code/loft-taxi/src/redux/route/reducer.js",["189"],"import { actions as authActions } from \"../auth\";\nimport { actions } from \"./actions\";\n\nconst initialState = {\n  addresses: [],\n  route: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case actions.ADDRESS_LIST: {\n      return {\n        ...state,\n        addresses: action.payload,\n      };\n    }\n    case actions.SET_ROUTE: {\n      return {\n        ...state,\n        route: action.payload,\n      };\n    }\n    case authActions.LOG_OUT_EVENT: {\n      return {\n        ...state,\n        route: [],\n      };\n    }\n    default:\n      return state;\n  }\n}\n","/home/galina/code/loft-taxi/src/redux/route/selectors.js",[],"/home/galina/code/loft-taxi/src/saga/payment/index.js",[],"/home/galina/code/loft-taxi/src/saga/payment/sagas.js",["190"],"import { put, select, takeEvery } from \"@redux-saga/core/effects\";\nimport { actions } from \"./actions\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { setCardInfo, setSuccessCard } from \"../../redux/payment\";\nimport { getToken } from \"../../redux/auth\";\n\nfunction* getPaymentDataSaga() {\n  const token = yield select(getToken);\n  try {\n    const { data } = yield axios.get(\"https://loft-taxi.glitch.me/card\", {\n      params: {\n        token,\n      },\n    });\n\n    if (data.success === false) {\n      toast.error(data.error);\n    } else {\n      yield put(setCardInfo(data));\n    }\n  } catch (e) {\n    toast.error(e.message);\n    console.error(e);\n  }\n}\n\nfunction* setPaymentDataSaga({ payload: card }) {\n  const token = yield select(getToken);\n  try {\n    const { data } = yield axios.post(\"https://loft-taxi.glitch.me/card\", {\n      ...card,\n      token,\n    });\n\n    if (!data.success) {\n      toast.error(data.error);\n    } else {\n      toast.success(\"Сохранено\", { position: \"top-center\" });\n      yield put(setCardInfo(card));\n      yield put(setSuccessCard(true));\n    }\n  } catch (e) {\n    toast.error(e.message);\n    console.error(e);\n  }\n}\n\nexport default function* () {\n  yield takeEvery(actions.GET_DATA, getPaymentDataSaga);\n  yield takeEvery(actions.SET_DATA, setPaymentDataSaga);\n}\n","/home/galina/code/loft-taxi/src/saga/payment/actions.js",[],"/home/galina/code/loft-taxi/src/redux/payment/index.js",[],"/home/galina/code/loft-taxi/src/redux/payment/reducer.js",["191"],"import { actions as authActions } from \"../auth\";\nimport { actions } from \"./actions\";\n\nconst initCardInfo = {\n  cardNumber: \"\",\n  expiryDate: \"\",\n  cardName: \"\",\n  cvc: \"\",\n};\n\nconst initialState = {\n  cardInfo: initCardInfo,\n  successCard: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_CARD_INFO: {\n      return {\n        ...state,\n        cardInfo: {\n          ...state.cardInfo,\n          ...action.payload,\n        },\n      };\n    }\n    case authActions.LOG_OUT_EVENT: {\n      return {\n        ...state,\n        cardInfo: initCardInfo,\n      };\n    }\n    case actions.SET_SUCCESS_CARD: {\n      return {\n        ...state,\n        successCard: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","/home/galina/code/loft-taxi/src/redux/payment/actions.js",[],"/home/galina/code/loft-taxi/src/redux/payment/selectors.js",[],"/home/galina/code/loft-taxi/src/components/routePage/index.jsx",[],"/home/galina/code/loft-taxi/src/components/routeSelect/index.jsx",["192"],"import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport s from \"./styles.module.css\";\nimport CustomSelect from \"../customSelect\";\nimport CarSelect from \"../carSelect\";\nimport { connect } from \"react-redux\";\nimport { getAddressList } from \"../../redux/route\";\nimport { getRoute as requestRoute, requestAddressList } from \"../../saga/route\";\nimport PropTypes from \"prop-types\";\n\nconst RouteSelect = ({ addressList, requestAddressList, getRoute }) => {\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n\n  useEffect(() => {\n    requestAddressList();\n  }, []);\n\n  const optionsAddresses = addressList.map((item) => ({\n    value: item,\n    label: item,\n  }));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!from || !to) {\n      toast.error(\"Выберите точки маршрута\");\n      return;\n    }\n    if (from && from === to) {\n      toast.error(\"Точки маршрута не могут совпадать\");\n      return;\n    }\n\n    getRoute(from, to);\n  };\n\n  const handleChangeFrom = (e) => {\n    setFrom(e.target.value);\n  };\n\n  const handleChangeTo = (e) => {\n    setTo(e.target.value);\n  };\n\n  const clearFrom = (e) => {\n    setFrom(\"\");\n  };\n\n  const clearTo = (e) => {\n    setTo(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.card}>\n      <div className={s.form}>\n        <CustomSelect\n          className={s.formControl}\n          value={from}\n          options={optionsAddresses}\n          label=\"Откуда\"\n          clearable={true}\n          onChange={handleChangeFrom}\n          onClear={clearFrom}\n        />\n        <CustomSelect\n          className={s.formControl}\n          value={to}\n          options={optionsAddresses}\n          label=\"Куда\"\n          clearable={true}\n          onChange={handleChangeTo}\n          onClear={clearTo}\n        />\n      </div>\n\n      <CarSelect className={s.carSelect} />\n    </form>\n  );\n};\n\nRouteSelect.propTypes = {\n  addressList: PropTypes.array,\n  getRoute: PropTypes.func,\n  requestAddressList: PropTypes.func,\n};\n\nexport default connect(\n  (state) => ({\n    addressList: getAddressList(state),\n  }),\n  (dispatch) => ({\n    requestAddressList: () => dispatch(requestAddressList()),\n    getRoute: (address1, address2) =>\n      dispatch(requestRoute({ address1, address2 })),\n  })\n)(RouteSelect);\n","/home/galina/code/loft-taxi/src/components/successRouteForm/index.jsx",[],"/home/galina/code/loft-taxi/src/components/errorRouteForm/index.jsx",[],"/home/galina/code/loft-taxi/src/components/successPaymentForm/index.jsx",[],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":58,"column":6,"nodeType":"199","endLine":58,"endColumn":8,"suggestions":"200"},{"ruleId":"197","severity":1,"message":"201","line":67,"column":6,"nodeType":"199","endLine":67,"endColumn":45,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":157,"column":17,"nodeType":"205","endLine":157,"endColumn":54},{"ruleId":"203","severity":1,"message":"204","line":162,"column":17,"nodeType":"205","endLine":162,"endColumn":57},{"ruleId":"203","severity":1,"message":"204","line":163,"column":17,"nodeType":"205","endLine":163,"endColumn":60},{"ruleId":"206","severity":1,"message":"207","line":9,"column":1,"nodeType":"208","endLine":34,"endColumn":2},{"ruleId":"206","severity":1,"message":"207","line":60,"column":1,"nodeType":"208","endLine":63,"endColumn":2},{"ruleId":"206","severity":1,"message":"207","line":31,"column":1,"nodeType":"208","endLine":34,"endColumn":2},{"ruleId":"206","severity":1,"message":"207","line":9,"column":1,"nodeType":"208","endLine":32,"endColumn":2},{"ruleId":"206","severity":1,"message":"207","line":49,"column":1,"nodeType":"208","endLine":52,"endColumn":2},{"ruleId":"206","severity":1,"message":"207","line":16,"column":1,"nodeType":"208","endLine":42,"endColumn":2},{"ruleId":"197","severity":1,"message":"209","line":17,"column":6,"nodeType":"199","endLine":17,"endColumn":8,"suggestions":"210"},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setSuccessCard'. Either include it or remove the dependency array. If 'setSuccessCard' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["213"],"React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.",["214"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'requestAddressList'. Either include it or remove the dependency array. If 'requestAddressList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["215"],"no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [setSuccessCard]",{"range":"222","text":"223"},"Update the dependencies array to be: [cardName, cardNumber, expiryDate, cvc, formik]",{"range":"224","text":"225"},"Update the dependencies array to be: [requestAddressList]",{"range":"226","text":"227"},[1580,1582],"[setSuccessCard]",[1730,1769],"[cardName, cardNumber, expiryDate, cvc, formik]",[621,623],"[requestAddressList]"]